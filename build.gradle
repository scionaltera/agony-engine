group 'com.agonyengine'
version '0.17.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: 'info.solidsoft.pitest'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'org.kordamp.gradle.stats'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '2.0.3.RELEASE'
        classpath group: 'se.transmode.gradle', name: 'gradle-docker', version: '1.2'
        classpath group: 'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: '1.3.0'
        classpath group: 'org.owasp', name: 'dependency-check-gradle', version: '4.0.1'
        classpath group: 'org.kordamp.gradle', name: 'stats-gradle-plugin', version: '0.2.2'
    }
}

repositories {
    mavenCentral()
}

configurations.compile {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
}

dependencies {
    compile group: 'javax.inject', name: 'javax.inject', version: '1'

    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.13'
    compile group: 'org.flywaydb', name: 'flyway-core', version: '5.0.7'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-websocket'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jetty'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-freemarker'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'

    compile group: 'org.springframework.session', name: 'spring-session-jdbc'

    // required for using ActiveMQ as a message broker
    compile group: 'io.projectreactor.ipc', name: 'reactor-netty', version: '0.7.6.RELEASE'

    compile group: 'org.webjars', name: 'webjars-locator-core', version: '0.35'
    compile group: 'org.webjars', name: 'jquery', version: '3.3.1'
    compile group: 'org.webjars', name: 'bootstrap', version: '4.0.0'
    compile group: 'org.webjars', name: 'font-awesome', version: '5.0.10'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.16.0'
}

bootJar {
    manifest {
        attributes(
            "Implementation-Title": rootProject.name,
            "Implementation-Version": version)
    }
}

task buildDocker(type: Docker) {
    push = false
    applicationName = jar.getBaseName()
    dockerfile = file('src/main/docker/local/Dockerfile')
    tagVersion = "latest"
    tag = "scionaltera/${applicationName}"

    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

build.dependsOn project.tasks.buildDocker

pitest {
    excludedClasses = [
        'com.agonyengine.AgonyEngine',
        'com.agonyengine.config.*'
    ]
    excludedMethods = [
        'hashCode',
        'equals'
    ]
    coverageThreshold = 70
    mutationThreshold = 70
    timestampedReports = false
}

dependencyCheck {
    suppressionFile "codequality/cve-suppressions.xml"
}

check.dependsOn project.tasks.pitest, project.tasks.dependencyCheckAnalyze, project.tasks.stats

// ensure pitest runs after junit, because pitest requires all tests to have passed
project.tasks.pitest.mustRunAfter test
